generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
  reviews   Review[]
}

model Barbershop {
  id          String               @id @default(uuid())
  name        String
  address     String
  phone       String[]
  description String
  imageUrl    String
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  services    BarbershopServices[] @relation("BarbershopToServices")
  reviews     Review[]
}

model BarbershopServices {
  id           String     @id @default(uuid())
  name         String
  description  String
  imageUrl     String
  price        Decimal    @db.Decimal(10, 2)
  barbershopId String
  barbershop   Barbershop @relation("BarbershopToServices", fields: [barbershopId], references: [id])
  bookings     Booking[]
}

model Booking {
  id        String             @id @default(uuid())
  userId    String
  serviceId String
  data      DateTime
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  service   BarbershopServices @relation(fields: [serviceId], references: [id])
  user      User               @relation(fields: [userId], references: [id])
}

model Review {
  id           String     @id @default(uuid())
  rating       Int // 1 a 5 estrelas
  comment      String? // Coment√°rio opcional
  userId       String
  barbershopId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  user         User       @relation(fields: [userId], references: [id])
  barbershop   Barbershop @relation(fields: [barbershopId], references: [id])

  @@index([barbershopId])
  @@index([userId])
}
